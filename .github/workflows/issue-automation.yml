name: 🤖 AI Issue Automation

on:
  issues:
    types: [opened, edited, labeled, assigned]
  issue_comment:
    types: [created, edited]

permissions:
  issues: write
  pull-requests: write
  contents: write

jobs:
  analyze-and-assign:
    runs-on: ubuntu-latest
    if: github.event.action == 'opened' || github.event.action == 'edited'
    
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'automation/package.json'

      - name: 📦 Install Dependencies
        run: |
          cd automation
          npm install

      - name: 🤖 Run Main Orchestrator Agent
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
          ISSUE_TITLE: ${{ github.event.issue.title }}
          ISSUE_BODY: ${{ github.event.issue.body }}
          ISSUE_LABELS: ${{ toJson(github.event.issue.labels) }}
          REPOSITORY_NAME: ${{ github.repository }}
          REPOSITORY_OWNER: ${{ github.repository_owner }}
        run: |
          cd automation
          npm run orchestrator

  implement-solution:
    runs-on: ubuntu-latest
    needs: analyze-and-assign
    if: ${{ needs.analyze-and-assign.outputs.should-implement == 'true' }}
    
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📦 Install Project Dependencies
        run: |
          cd frontend && npm install
          cd ../backend && npm install
          cd ../automation && npm install

      - name: 🎯 Execute Specialized Agent
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
          AGENT_TYPE: ${{ needs.analyze-and-assign.outputs.agent-type }}
          IMPLEMENTATION_PLAN: ${{ needs.analyze-and-assign.outputs.implementation-plan }}
        run: |
          cd automation
          npm run agent -- --type=${{ needs.analyze-and-assign.outputs.agent-type }}

      - name: 🔍 Run Tests
        run: |
          if [ -f "frontend/package.json" ]; then
            cd frontend && npm run build
          fi
          if [ -f "backend/package.json" ]; then
            cd backend && npm run build
          fi

      - name: 📝 Create Pull Request
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
        run: |
          cd automation
          npm run create-pr