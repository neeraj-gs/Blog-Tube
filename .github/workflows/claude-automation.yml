name: 🤖 Claude Code AI Automation

on:
  issues:
    types: [opened]
  issue_comment:
    types: [created]

permissions:
  issues: write
  pull-requests: write
  contents: write

jobs:
  claude-automation:
    runs-on: ubuntu-latest
    if: github.event.action == 'opened' || (github.event.action == 'created' && contains(github.event.comment.body, '@claude-automate'))
    
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: 🔧 Configure Git Identity
        run: |
          git config --global user.name "BlogTube AI Automation"
          git config --global user.email "ai-automation@blogtube.com"
          echo "✅ Git identity configured"

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: 📦 Install Dependencies
        run: |
          echo "🔧 Installing automation dependencies..."
          cd automation && npm install
          echo "✅ Automation dependencies installed"

      - name: 🤖 Run Claude Code Automation
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
          ISSUE_TITLE: ${{ github.event.issue.title }}
          ISSUE_BODY: ${{ github.event.issue.body }}
          ISSUE_LABELS: ${{ toJson(github.event.issue.labels) }}
          ISSUE_USER: ${{ github.event.issue.user.login }}
          REPOSITORY_NAME: ${{ github.repository }}
          REPOSITORY_OWNER: ${{ github.repository_owner }}
          COMMENT_BODY: ${{ github.event.comment.body }}
        run: |
          echo "🚀 Starting BlogTube AI Automation..."
          echo "📋 Issue: #${{ github.event.issue.number }} - ${{ github.event.issue.title }}"
          
          # Install GitHub CLI if not available
          echo "🔧 Setting up GitHub CLI..."
          if ! command -v gh &> /dev/null; then
            curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
            echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
            sudo apt update
            sudo apt install gh
          fi
          echo "✅ GitHub CLI ready"
          
          # Claude Code Task tool will be used directly within the automation system
          echo "🤖 Claude Code Task tool integration ready"
          
          echo "🎯 Launching Claude Code Automation System..."
          echo "Issue #${{ github.event.issue.number }}: ${{ github.event.issue.title }}"
          
          # Run the Claude Code integration script
          node automation/claude-code-integration.js

      - name: 🔍 Validate Changes
        if: success()
        run: |
          echo "🔍 Validating automation results..."
          
          # Check if any changes were made
          if [ -n "$(git status --porcelain)" ]; then
            echo "📁 Changes detected:"
            git status --short
            echo "✅ Code changes successfully made by automation"
          else
            echo "ℹ️ No code changes made (might be documentation or analysis only)"
          fi
          
          echo "🧪 Running basic validation..."
          if [ -f "frontend/package.json" ]; then
            echo "Validating frontend changes..."
            cd frontend && npm install --silent && npm run build --if-present
          fi
          if [ -f "backend/package.json" ]; then
            echo "Validating backend changes..."
            cd backend && npm install --silent && npm run build --if-present
          fi
          
          echo "✅ Validation completed"

      - name: 📊 Report Automation Status
        if: always()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "📊 BlogTube AI Automation Workflow Summary"
          echo "=============================================="
          echo "Issue: #${{ github.event.issue.number }} - ${{ github.event.issue.title }}"
          echo "Status: ${{ job.status }}"
          echo "Repository: ${{ github.repository }}"
          echo "Timestamp: $(date -u +"%Y-%m-%d %H:%M:%S UTC")"
          
          if [ "${{ job.status }}" == "success" ]; then
            echo "✅ BlogTube AI automation completed successfully!"
            echo "🔍 Check the issue for automation results and potential PR"
          else
            echo "❌ BlogTube AI automation encountered issues"
            echo "🔍 Check the workflow logs for error details"
          fi
          
          echo "=============================================="